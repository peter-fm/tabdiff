name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}-${{ matrix.variant }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            variant: bundled
            name: tabdiff-windows-x64-bundled.exe
            
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            variant: unbundled
            name: tabdiff-windows-x64.exe
            
          - target: x86_64-apple-darwin
            os: macos-latest
            variant: bundled
            name: tabdiff-macos-x64-bundled
            
          - target: x86_64-apple-darwin
            os: macos-latest
            variant: unbundled
            name: tabdiff-macos-x64
            
          - target: aarch64-apple-darwin
            os: macos-latest
            variant: bundled
            name: tabdiff-macos-arm64-bundled
            
          - target: aarch64-apple-darwin
            os: macos-latest
            variant: unbundled
            name: tabdiff-macos-arm64
            
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            variant: bundled
            name: tabdiff-linux-x64-bundled
            
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            variant: unbundled
            name: tabdiff-linux-x64
            
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            variant: bundled
            name: tabdiff-linux-arm64-bundled
            
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            variant: unbundled
            name: tabdiff-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Configure cross-compilation (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Build (bundled)
        if: matrix.variant == 'bundled'
        run: cargo build --release --target ${{ matrix.target }} --features bundled

      - name: Build (unbundled)
        if: matrix.variant == 'unbundled'
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          copy target\${{ matrix.target }}\release\tabdiff.exe ${{ matrix.name }}

      - name: Rename binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/tabdiff ${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/tabdiff-*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}